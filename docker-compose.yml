version: '3.8'

services:
  db:
    image: postgres:14.2-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    container_name: db
    env_file:
      - .env
    ports:
      - ${POST}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres.ubvicyzthpojmpslhfox -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: ${IMAGE_APP}
    container_name: app
    build: .
    command: python src/manage.py runserver 0.0.0.0:8000
    ports:
      - ${PORT_APP}:8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  bot:
    image: ${IMAGE_APP}
    build: .
    container_name: bot
    command: python src/manage.py start_bot
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
